version: '3'

services:

  server_template_proxy:
    image: "traefik:v2.4"
    container_name: "server_template_proxy"
    ports:
      - "80:80"
      - "443:443"
      - "5432:5432"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./_proxy/traefik.yaml:/etc/traefik/traefik.yaml:ro"
      - "./_proxy/config.yaml:/etc/traefik/config.yaml:ro"
      - "./_proxy/certs:/etc/certs:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"

  server_template_database:
    image: "postgres" 
    container_name: "server_template_database"
    restart: always
    env_file:
      - _database/db.env
    volumes:
      - database:/var/lib/postgresql/data/ 
      - "./_database/init:/docker-entrypoint-initdb.d/:ro"
    depends_on:
      - "server_template_proxy"
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.server_template_database.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.server_template_database.service=server_template_database"
      - "traefik.tcp.routers.server_template_database.tls=false"
      - "traefik.tcp.services.server_template_database.loadbalancer.server.port=5432"
      - "traefik.tcp.routers.server_template_database.entryPoints=server_template_database"

  server_template:
    container_name: "server_template"
    image: server_template 
    build:
      context: .
      dockerfile: server_template.Dockerfile
    env_file:
      - conf/server_template.env
    depends_on:
      - "server_template_proxy"
      - "server_template_database"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server_template.rule=Host(`server_template.localhost`)"
      - "traefik.http.routers.server_template.tls=true"


volumes:
  database: 